/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Auction_Management;

import Login.*;
import static com.sun.java.accessibility.util.AWTEventMonitor.addWindowListener;
import java.awt.Color;
import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.Socket;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author icydeath
 */
public class RechargeUser extends javax.swing.JInternalFrame{
    Socket clientSocket;
    String username;
    String localhost;
    /**
     * Creates new form RechargeUser
     */
    public RechargeUser(String username,Socket clientSocket,String localhost) {
        initComponents();
        jLabelCodeError.setBackground(Color.red);
        jLabelSeriesError.setBackground(Color.red);
        this.username = username;
        this.localhost = localhost;
        try {
            this.clientSocket = new Socket(localhost, 9999);// Tao clinent socket de ket noi toi server    
        } catch (IOException ex) {
            Logger.getLogger(RechargeUser.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    int money;

    public int getMoney() {
        return money;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabelCode = new javax.swing.JLabel();
        jLabelSeries = new javax.swing.JLabel();
        jTextFieldCode = new javax.swing.JTextField();
        jTextFieldSeries = new javax.swing.JTextField();
        jButtonOK = new javax.swing.JButton();
        jButtonCancel = new javax.swing.JButton();
        jLabelTitle = new javax.swing.JLabel();
        jLabelSeriesError = new javax.swing.JLabel();
        jLabelCodeError = new javax.swing.JLabel();

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jLabelCode.setText("Code");

        jLabelSeries.setText("Series");

        jButtonOK.setText("OK");
        jButtonOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOKActionPerformed(evt);
            }
        });

        jButtonCancel.setText("Cancel");
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });

        jLabelTitle.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabelTitle.setText("Recharge");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(139, 139, 139)
                .addComponent(jLabelTitle)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(104, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelSeries)
                                .addGap(51, 51, 51)
                                .addComponent(jTextFieldSeries, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelCode)
                                .addGap(58, 58, 58)
                                .addComponent(jTextFieldCode, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelSeriesError, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelCodeError, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButtonOK, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonCancel)
                        .addGap(113, 113, 113))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelCode)
                            .addComponent(jTextFieldCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelSeries)
                            .addComponent(jTextFieldSeries, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelSeriesError, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonOK)
                            .addComponent(jButtonCancel)))
                    .addComponent(jLabelCodeError, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public boolean checkInput(String s){
        return s.matches("[0-9]{12}");
    }
  
    private void jButtonOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOKActionPerformed
        // TODO add your handling code here:
        
            
        
        if(!checkInput(jTextFieldCode.getText())){
            jLabelCodeError.setText("Error");
        }
        if(!checkInput(jTextFieldSeries.getText())){
            jLabelSeriesError.setText("Error");
        }
        if(checkInput(jTextFieldCode.getText()) && checkInput(jTextFieldSeries.getText())){
            DataOutputStream sendToServer = null;
            String s = "Update##UserManagement##";
            try {
                sendToServer = new DataOutputStream(clientSocket.getOutputStream()); // Tao output stream ket noi toi socket
                sendToServer.writeBytes("select##Recharge\n");// gui toi server
                BufferedReader inFromServer = new BufferedReader(new InputStreamReader(clientSocket.getInputStream()));
                
                
                boolean checkDuplicated = false;
                String delete = "";
                while (true) {
                    
                    String ketQua = inFromServer.readLine();// Nhan lai tu server
                    
                    if (ketQua.equals("quit")) {
                        break;
                    }
                    String[] ss = ketQua.split("##");
                    if(ss[1].equals(jTextFieldCode.getText()) && ss[0].equals(jTextFieldSeries.getText())){
                        money = Integer.parseInt(ss[2].trim());
                        delete = jTextFieldCode.getText();
                        checkDuplicated = true;
                    }
                }
               
                if(checkDuplicated){
                    sendToServer.writeBytes("select##UserManagement\n");// gui toi server
                    while (true) {

                        String ketQua = inFromServer.readLine();// Nhan lai tu server
                        
                        if (ketQua.equals("quit")) {
                            break;
                        }
                        String[] ss = ketQua.split("##");
                        
                        
                        if(ss[0].equals(username)){
                            int moneyUser = Integer.parseInt(ss[2]) + money;
                            int totalMoney = Integer.parseInt(ss[6]) + money;
                            String rank;
                            if(totalMoney < 100) rank = "Cropper";
                            else if(totalMoney >=100 && totalMoney<500) rank = "Silver";
                            else if(totalMoney>=500 && totalMoney<2000) rank = "Gold";
                            else if(totalMoney>=2000 && totalMoney < 5000) rank = "Platinum";
                            else if(totalMoney>=5000 && totalMoney<10000) rank = "Diamond";
                            else rank = "Gemstone";
                            String money1 = "" + moneyUser;
                            String money2 = "" + totalMoney;
                            s += ss[0] + "##" + ss[1] + "##" + money1 + "##" + rank + "##" + ss[4] + "##" + ss[5] + "##" + money2 + "##" + ss[7];    
                        }
                    }
                    
                    
                    sendToServer.writeBytes(s+'\n');// gui toi server
                    sendToServer.writeBytes("DELETE##Recharge##"+delete+'\n');
//                    new Login().setVisible(true);
                    this.dispose();
                    clientSocket.close();
                    JOptionPane.showMessageDialog(rootPane,"Successful");
                    
                }else{
                    JOptionPane.showMessageDialog(rootPane,"Series or code not true");
                }}
            catch (IOException ex) {
                Logger.getLogger(RechargeUser.class.getName()).log(Level.SEVERE, null, ex);
            }
                
                
        }
        
        
    }//GEN-LAST:event_jButtonOKActionPerformed

    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
        // TODO add your handling code here:
        
        this.dispose();
        
    }//GEN-LAST:event_jButtonCancelActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
        if(!clientSocket.isConnected()){
            try {
                clientSocket.close();
            } catch (IOException ex) {
                Logger.getLogger(User.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
    }//GEN-LAST:event_formWindowClosed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonOK;
    private javax.swing.JLabel jLabelCode;
    private javax.swing.JLabel jLabelCodeError;
    private javax.swing.JLabel jLabelSeries;
    private javax.swing.JLabel jLabelSeriesError;
    private javax.swing.JLabel jLabelTitle;
    private javax.swing.JTextField jTextFieldCode;
    private javax.swing.JTextField jTextFieldSeries;
    // End of variables declaration//GEN-END:variables
}
