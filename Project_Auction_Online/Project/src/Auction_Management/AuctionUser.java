/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Auction_Management;


import Login.fogotPass;
import java.awt.Color;
import java.awt.image.BufferedImage;
import java.io.BufferedReader;
import java.io.ByteArrayOutputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.Socket;
import java.nio.ByteBuffer;
import java.sql.SQLException;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileSystemView;

/**
 *
 * @author icydeath
 */
public class AuctionUser extends javax.swing.JFrame {

    /**
     * Creates new form AuctionUser
     */
    AuctionUserCheck ac = new AuctionUserCheck();
    JLabel labelImage;
//    Socket clientSocket;
    String username;
    String localhost;
    public AuctionUser(String username,String localhost) {
        initComponents();
        this.localhost = localhost;
        labelImage = new JLabel();
        labelImage.setSize(jPanelImage.getWidth(), jPanelImage.getHeight());
        jPanelImage.add(labelImage);
//        this.clientSocket = clientSocket;
        this.username = username;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabelName = new javax.swing.JLabel();
        jLabelCategory = new javax.swing.JLabel();
        jLabelPrice = new javax.swing.JLabel();
        jLabelAductionPrice = new javax.swing.JLabel();
        jTextFieldName = new javax.swing.JTextField();
        jTextFieldCategory = new javax.swing.JTextField();
        jTextFieldPrice = new javax.swing.JTextField();
        jTextFieldAductionPrice = new javax.swing.JTextField();
        jLabelPhoto = new javax.swing.JLabel();
        jButtonBrower = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButtonOk = new javax.swing.JButton();
        jButtonCancel = new javax.swing.JButton();
        jLabelCategoryErr = new javax.swing.JLabel();
        jLabelNameErr = new javax.swing.JLabel();
        jLabelPriceErr = new javax.swing.JLabel();
        jLabelAPriceErr = new javax.swing.JLabel();
        jPanelImage = new javax.swing.JPanel();
        err = new javax.swing.JLabel();

        jLabelName.setText("Name: ");

        jLabelCategory.setText("Infomation:");

        jLabelPrice.setText("Price: ");

        jLabelAductionPrice.setText("Aduction Price: ");

        jLabelPhoto.setText("Photo:");

        jButtonBrower.setText("Brower");
        jButtonBrower.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBrowerActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setText("ADD PRODUCT");

        jButtonOk.setText("OK");
        jButtonOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOkActionPerformed(evt);
            }
        });

        jButtonCancel.setText("Cancel");
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelImageLayout = new javax.swing.GroupLayout(jPanelImage);
        jPanelImage.setLayout(jPanelImageLayout);
        jPanelImageLayout.setHorizontalGroup(
            jPanelImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 61, Short.MAX_VALUE)
        );
        jPanelImageLayout.setVerticalGroup(
            jPanelImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 69, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(89, 89, 89)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelName)
                    .addComponent(jLabelCategory)
                    .addComponent(jLabelPrice)
                    .addComponent(jLabelAductionPrice)
                    .addComponent(jLabelPhoto))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jPanelImage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(jButtonBrower))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jTextFieldAductionPrice, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)
                        .addComponent(jTextFieldName, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jTextFieldCategory, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jTextFieldPrice, javax.swing.GroupLayout.Alignment.TRAILING)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelCategoryErr)
                    .addComponent(jLabelNameErr)
                    .addComponent(jLabelPriceErr)
                    .addComponent(jLabelAPriceErr))
                .addGap(88, 88, 88))
            .addGroup(layout.createSequentialGroup()
                .addGap(159, 159, 159)
                .addComponent(err)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(151, 151, 151)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonOk, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButtonCancel)
                .addGap(136, 136, 136))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelName)
                            .addComponent(jTextFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelNameErr))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelCategory)
                            .addComponent(jTextFieldCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(109, 109, 109)
                        .addComponent(jLabelCategoryErr)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextFieldPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabelPriceErr))
                    .addComponent(jLabelPrice, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelAductionPrice)
                    .addComponent(jTextFieldAductionPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelAPriceErr))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelPhoto)
                            .addComponent(jButtonBrower)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jPanelImage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addComponent(err)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonOk)
                    .addComponent(jButtonCancel))
                .addGap(33, 33, 33))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButtonCancelActionPerformed

    private void jButtonOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOkActionPerformed

        boolean checked = true;
        jLabelAPriceErr.setForeground(Color.red);
        jLabelCategoryErr.setForeground(Color.red);
        jLabelNameErr.setForeground(Color.red);
        jLabelPriceErr.setForeground(Color.red);
        String newPass = fogotPass.newPass();
        
        
        String hours = null;

        if (!ac.checkIsString(jTextFieldName.getText()) || ac.checkIsEmpty(jTextFieldName.getText())) {
            checked = false;
            jLabelNameErr.setText("Error!!!");

        } else {

            jLabelNameErr.setText("");
        }

        if (!ac.checkIsString(jTextFieldCategory.getText()) || ac.checkIsEmpty(jTextFieldCategory.getText())) {
            checked = false;
            jLabelCategoryErr.setText("Error!!!");

        } else {

            jLabelCategoryErr.setText("");
        }
        if (!ac.checkIsPrice(jTextFieldPrice.getText()) || ac.checkIsEmpty(jTextFieldPrice.getText())) {
            checked = false;
            jLabelPriceErr.setText("Error!!!");

        } else {

            jLabelPriceErr.setText("");
        }
        if (!ac.checkIsPrice(jTextFieldAductionPrice.getText()) || ac.checkIsEmpty(jTextFieldAductionPrice.getText())) {
            checked = false;
            jLabelAPriceErr.setText("Error!!!");

        } else {

        
            jLabelAPriceErr.setText("");
        }
       
  
        
        if (checked) {
            int max = 0;
            try {
                Socket clientSocket = new Socket(localhost, 9999);// Tao clinent socket de ket noi toi server  
                DataOutputStream sendToServer = new DataOutputStream(clientSocket.getOutputStream()); // Tao output stream ket noi toi socket
                BufferedReader inFromServer = new BufferedReader(new InputStreamReader(clientSocket.getInputStream()));
                sendToServer.writeBytes("select##max\n");
                String s = inFromServer.readLine();
                max = Integer.parseInt(s);
                
                sendToServer.writeBytes("insert##product##"+jTextFieldName.getText()+"##"+jTextFieldCategory.getText()+"##"+jTextFieldPrice.getText()+"##"+jTextFieldAductionPrice.getText()+"##"+username+"##"+max+"\n");
                clientSocket.close();
            } catch (IOException ex) {
                Logger.getLogger(RechargeUser.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                 Socket dce = new Socket(localhost, 9696);// Tao clinent socket de ket noi toi server    
                                    DataOutputStream send = new DataOutputStream(dce.getOutputStream()); // Tao output stream ket noi toi socket

                                    BufferedReader receive = new BufferedReader(new InputStreamReader(dce.getInputStream()));
                                    OutputStream outputStream = dce.getOutputStream();
                                    send.writeBytes(""+max+"\n");
                                    BufferedImage image = ImageIO.read(new File(ss));

                                    ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();
                                    ImageIO.write(image, "jpg", byteArrayOutputStream);

                                    byte[] size = ByteBuffer.allocate(4).putInt(byteArrayOutputStream.size()).array();
                                    
                                    outputStream.write(size);
                                    
                                    outputStream.write(byteArrayOutputStream.toByteArray());
                                    outputStream.flush();


                                    dce.close();
            } catch (Exception e) {
            }
            JOptionPane.showMessageDialog(this, "Successful");
            
            this.dispose();
            

        }


    }//GEN-LAST:event_jButtonOkActionPerformed
String ss;
    private void jButtonBrowerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBrowerActionPerformed
        JFileChooser chooser = new JFileChooser(FileSystemView.getFileSystemView().getHomeDirectory());
        chooser.setMultiSelectionEnabled(true);
        chooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        int returnValue = chooser.showOpenDialog(null);
        if (returnValue == JFileChooser.APPROVE_OPTION) {
            File[] files = chooser.getSelectedFiles();
            
            Arrays.asList(files).forEach(x -> {
                if (x.isFile()) {
                    
                    ss = x.getPath();
                    try {
                        BufferedImage image = ImageIO.read(new File(x.getPath()));
                        Icon icon = new ImageIcon(image.getScaledInstance(jPanelImage.getWidth(), jPanelImage.getHeight(), image.SCALE_SMOOTH));
                        labelImage.setIcon(icon);
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(rootPane, "This isn't an Image");
                    }
                }
            });

        }
        
        
    }//GEN-LAST:event_jButtonBrowerActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel err;
    private javax.swing.JButton jButtonBrower;
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonOk;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelAPriceErr;
    private javax.swing.JLabel jLabelAductionPrice;
    private javax.swing.JLabel jLabelCategory;
    private javax.swing.JLabel jLabelCategoryErr;
    private javax.swing.JLabel jLabelName;
    private javax.swing.JLabel jLabelNameErr;
    private javax.swing.JLabel jLabelPhoto;
    private javax.swing.JLabel jLabelPrice;
    private javax.swing.JLabel jLabelPriceErr;
    private javax.swing.JPanel jPanelImage;
    private javax.swing.JTextField jTextFieldAductionPrice;
    private javax.swing.JTextField jTextFieldCategory;
    private javax.swing.JTextField jTextFieldName;
    private javax.swing.JTextField jTextFieldPrice;
    // End of variables declaration//GEN-END:variables
}
