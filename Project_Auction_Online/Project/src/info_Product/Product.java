/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package info_Product;

import Auction_Management.RechargeUser;
import java.awt.image.BufferedImage;
import java.io.BufferedReader;
import java.io.ByteArrayInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.Socket;
import java.nio.ByteBuffer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author icydeath
 */
public class Product extends javax.swing.JFrame {
    String s,s2,s1;
    /**
     * Creates new form Product
     */
    String localhost;
    String username;
    String value;
    Socket clientSocket;
    DataOutputStream sendToServer;
    BufferedReader inFromServer;
    public Product(String username, String value,String localhost) {
        initComponents();
        this.username = username;
        this. value = value;
        this.localhost = localhost;
    }
    ImageIcon icon;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabelAvatar = new javax.swing.JLabel();
        jLabelName = new javax.swing.JLabel();
        jLabelAuctioner = new javax.swing.JLabel();
        jLabelPrice = new javax.swing.JLabel();
        jLabelTime = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jTextFieldAuction = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jLabelInfo = new javax.swing.JLabel();
        jLabelAfterPrice = new javax.swing.JLabel();
        jLabelNumber = new javax.swing.JLabel();
        jLabelNote = new javax.swing.JLabel();

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabelAvatar, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabelAvatar, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jLabelName.setText("Name:");

        jLabelAuctioner.setText("seller:");

        jLabelPrice.setText("Starting price:");

        jLabelTime.setText("Time:");

        jButton1.setText("Auction");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("OK");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabelInfo.setText("text");

        jLabelAfterPrice.setText("Auction price:");

        jLabelNumber.setText("number of auctions:");

        jLabelNote.setText("Note:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabelNumber, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelPrice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelTime, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextFieldAuction, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabelAfterPrice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jLabelInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelAuctioner, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(162, 162, 162)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jLabelNote, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(37, 37, 37))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelTime, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelAfterPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldAuction, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addComponent(jLabelNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelAuctioner, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51)
                .addComponent(jLabelNote, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
       
        int i1 = Integer.parseInt(s) + Integer.parseInt(s2);
        int i2 = Integer.parseInt(s1) + Integer.parseInt(s2);
        
        if(checkInput()){
            int i = Integer.parseInt(jTextFieldAuction.getText());
            if(i1 < i && i2 < i){
                jLabelAfterPrice.setText(jTextFieldAuction.getText());
                try {
                    Socket clientSocket = new Socket(localhost, 9999);// Tao clinent socket de ket noi toi server
                    DataOutputStream sendToServer = new DataOutputStream(clientSocket.getOutputStream());// Tao output stream ket noi toi socket
                    sendToServer.writeBytes("update product set newMoney = "+i+", fullname = '"+username+"', numberOfAuction = "+number+" where id = '"+value+"';");
                } catch (IOException ex) {
                    Logger.getLogger(Product.class.getName()).log(Level.SEVERE, null, ex);
                }
                JOptionPane.showMessageDialog(this, "Successful");
            }else{
                JOptionPane.showMessageDialog(this, "Unsuccessful");
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        try {
            Socket clientSocket = new Socket(localhost, 9999);// Tao clinent socket de ket noi toi server
            DataOutputStream sendToServer = new DataOutputStream(clientSocket.getOutputStream());// Tao output stream ket noi toi socket
            BufferedReader inFromServer = new BufferedReader(new InputStreamReader(clientSocket.getInputStream()));
            String ketQua;//Cau duoc server xu ly va tra lai la in hoa

            sendToServer.writeBytes("select##product\n");// gui toi server
            while (true) {

                ketQua = inFromServer.readLine();// Nhan lai tu server
                if (ketQua.equals("quit")) {
                    break;
                }
                String[] ss = ketQua.split("##");
                if(value.equals(ss[0])){
                    if(ss[9].equalsIgnoreCase("null") || ss[9] == null){
                       
                        ss[9] = "0";
                        System.out.println(ss[9]);
                        s = "0";
                        jLabelAfterPrice.setText("Auction Price: 0");
                    }else{
                        jLabelAfterPrice.setText("Auction Price: "+ss[9]);
                        s = ss[9];
                    }
                    
                    
                    s1 = ss[4];
                    s2 = ss[11];
                    jLabelName.setText("Name: "+ss[2]);
                    jLabelPrice.setText("Starting Price: "+ss[4]);
                    jLabelTime.setText("Time: "+ss[10]);
                    
                    jLabelNumber.setText("Number Of Auction: "+ss[12]);
                    jLabelAuctioner.setText("Seller: "+ss[6]);
                    String text = "<html>Infomation:<br>";
                    for(int i = 0; i<ss[3].length();i++){
                        if(i == 60 || i == 120 || i == 180 || i == 240){
                            while(ss[3].charAt(i) != ' '){
                                text += ss[3].charAt(i);
                                i++;
                            }
                            if(ss[3].charAt(i) == ' '){
                                text += "<br>";
                            }
                        }else
                        text += ss[3].charAt(i);
                    }
                    text+="</html>";
                    jLabelInfo.setText(text);
                    jLabelNote.setText("Note: Each auction must be >= "+ss[11]);
                }

            }
            clientSocket.close();
        } catch (IOException ex) {
            Logger.getLogger(RechargeUser.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            Socket dce = new Socket(localhost, 6969);// Tao clinent socket de ket noi toi server
            DataOutputStream send = new DataOutputStream(dce.getOutputStream()); // Tao output stream ket noi toi socket

            BufferedReader receive = new BufferedReader(new InputStreamReader(dce.getInputStream()));
            InputStream inputStream = dce.getInputStream();
            send.writeBytes(value+"\n");
            byte[] sizeAr = new byte[4];
            inputStream.read(sizeAr);

            int size = ByteBuffer.wrap(sizeAr).asIntBuffer().get();

            byte[] imageAr = new byte[size];

            inputStream.read(imageAr);

            BufferedImage image = ImageIO.read(new ByteArrayInputStream(imageAr));
            icon= new ImageIcon(image.getScaledInstance(jPanel1.getWidth(),jPanel1.getHeight(), image.SCALE_SMOOTH));
            jLabelAvatar.setIcon(icon);

            dce.close();
        } catch (IOException ex) {
            Logger.getLogger(RechargeUser.class.getName()).log(Level.SEVERE, null, ex);
        }
        new Thread(new Runnable() {
            @Override
            public void run() {
                while(true){
                    try {
                        Socket abc = new Socket(localhost, 9999);// Tao clinent socket de ket noi toi server
                        DataOutputStream sendToServer = new DataOutputStream(abc.getOutputStream());// Tao output stream ket noi toi socket
                        BufferedReader inFromServer = new BufferedReader(new InputStreamReader(abc.getInputStream()));
                        String ketQua;//Cau duoc server xu ly va tra lai la in hoa

                        sendToServer.writeBytes("select##product\n");// gui toi server
                        while (true) {

                            ketQua = inFromServer.readLine();// Nhan lai tu server
                            if (ketQua.equals("quit")) {
                                break;
                            }
                            String[] ss = ketQua.split("##");
                            if(value.equals(ss[0])){
                                number = Integer.parseInt(ss[12]) + 1;
                                
                                    
                                    jLabelAfterPrice.setText("Auction Price: "+ss[9]);
                                    s=ss[9];
                                
                                jLabelTime.setText("Time: "+ss[10]);
                            }

                        }
                    } catch (IOException ex) {
                        Logger.getLogger(RechargeUser.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        }).start();
    }//GEN-LAST:event_formWindowOpened
    public boolean checkInput(){
        return jTextFieldAuction.getText().matches("[0-9]{0,}");
    }
    int number;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabelAfterPrice;
    private javax.swing.JLabel jLabelAuctioner;
    private javax.swing.JLabel jLabelAvatar;
    private javax.swing.JLabel jLabelInfo;
    private javax.swing.JLabel jLabelName;
    private javax.swing.JLabel jLabelNote;
    private javax.swing.JLabel jLabelNumber;
    private javax.swing.JLabel jLabelPrice;
    private javax.swing.JLabel jLabelTime;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextFieldAuction;
    // End of variables declaration//GEN-END:variables
}
